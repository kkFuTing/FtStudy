plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'


// https://www.jianshu.com/p/3cdb17cab516(同学们如果不会，就需要看这个文章)
// https://blog.csdn.net/myc185/article/details/108818419
// https://www.freesion.com/article/91201351508/
// 此外，要生成适用于 Kotlin 独有的模块的 Kotlin 代码，请添加以下行：(当初加入这一行代码 就是为了支持Kotlin)
// apply plugin: "androidx.navigation.safeargs.kotlin"
// 插件传递参数 https://blog.csdn.net/nanquan11/article/details/109807501
//    apply plugin: "androidx.navigation.safeargs"
    //navigation 的 Safe Args 配置
    id "androidx.navigation.safeargs"
}

android {
    namespace 'com.futing.myjetpack'
    compileSdk 34

    defaultConfig {
        applicationId "com.futing.myjetpack"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
//        dataBinding true 我记得这种也可以实现dataBing 步骤一
        compose true
    }

//    使用dataBinding 步骤一：
    dataBinding {
        enable true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.8.0'
    implementation platform('androidx.compose:compose-bom:2024.04.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.04.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0' //livedata要用到 ViewModel

//    def room_version = "2.0.0-beta01"
//    使用room步骤一：导入包begin
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // use kapt for Kotlin
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    //    使用room步骤一导入包end


    def nav_version = "2.3.2"
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation 'com.google.android.material:material:1.1.0' //lsn4_navigationdemo 包使用，底部页签 底部导航条条


    // Paging库依赖
    implementation 'androidx.paging:paging-runtime:2.1.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'


    // 2.4 最新的好像
    // TODO 同学们，这里就是导入WorkManager的依赖支持，因为WorkManager是以扩展库的方式
//    def work_version = "2.3.4" 运行不了了  Targeting S+ (version 31 and above) requires that one of FLAG_IMMUTABLE or FLAG_MUTABLE be specified when creating a PendingIntent.
//                                                                                                    Strongly consider using FLAG_IMMUTABLE, only use FLAG_MUTABLE if some functionality depends on the PendingIntent being mutable, e.g. if it needs to be used with inline replies or bubbles.
    implementation "androidx.work:work-runtime:2.9.1"

//   sunflower 项目添加
//    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    def gsonVersion = '2.8.2'
    implementation "com.google.code.gson:gson:$gsonVersion"
//    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    def  guavaVersion = '27.1-android'
    implementation "com.google.guava:guava:$guavaVersion" //com.google.common.base.Preconditions

}
